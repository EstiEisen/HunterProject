import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';

import { DataTableComponent } from '../../../shared/data-table/data-table.component';

import { UserSessionService} from '../../../shared/_services/user-session.service';
import { FeedbackService } from '../../_services/http/feedback.service';

import { MONTHS } from '../../../shared/_const/months';
import { Employer } from '../../../shared/_models/employer.model';
import { Product } from '../../../shared/_models/product.model';
import {Select2OptionData} from 'ng2-select2/ng2-select2.interface';
import {FileFeedback} from '../../../shared/_models/file-feedback.model';

@Component({
  selector: 'app-feedback-file-table',
  templateUrl: './feedback-file-table.component.html',
  styleUrls: ['../../../shared/data-table/data-table.component.css']
})
export class FeedbackFileTableComponent extends DataTableComponent implements OnInit {

  employers: Employer[] = [];
  product = new Product();

  manufacturers: Select2OptionData[] = [];
  statuses: Select2OptionData[] = [];
  processes: Select2OptionData[] = [];

  activeFilter: 'processID';
  isLoadingData = false;

  readonly statusLabels = { 'successful': 'תקין', partial: 'בטיפול', failed: 'שגוי' };
  readonly months = MONTHS;
  readonly currentYear = new Date().getFullYear();

  constructor(protected route: ActivatedRoute, private userSession: UserSessionService, private feedbackService: FeedbackService) {
    super(route);
  }

  ngOnInit() {
    debugger;
    this.employers = this.route.snapshot.data['employers'];
    this.searchCriteria['employerID'] = +this.employers[0].id;
    let year = this.route.snapshot.queryParams['year'];
    let month = this.route.snapshot.queryParams['month'];
    let processId = this.route.snapshot.queryParams['processId'];
    if (year && month && processId) {
      this.searchCriteria['months'] = [parseInt(month)];
      this.searchCriteria['year'] = parseInt(year);
      this.searchCriteria['processId'] = parseInt(processId);
    }

    this.fetchItems();
  }

  fetchItems(): void {
    this.feedbackService.getFileFeedbacks(this.userSession.getToken(), this.searchCriteria).then(response => this.setItems(response));
  }

  setMonths(month: number): void {
    debugger;
    this.searchCriteria['month'] = month;
    this.search();
  }

  getPayTypeLabel(key: number): string{
    return FileFeedback.payTypeLabel.get(key);
  }

  setItems(response: any): void {
    this.isLoadingData = true;
    this.isSearching = false;

    this.manufacturers = response.manufacturers;
    this.statuses = response.statuses;
    this.items = response.feedbacks;

    if (this.activeFilter !== 'processID') {
      this.processes = this.setProcessSelect2Data(response['processes']);
    }




    this.paginationData.totalItems = this.items.length;
    this.paginateItems();
    setTimeout(() => this.isLoadingData = false, 0);
  }

  setSearch(name: 'processID', value: number): void {
    if (value != 0) {
      this.activeFilter = name;

      if (this.isLoadingData) {
        return;
      }
      this.searchCriteria[name] = value;
      this.search();
    }
  }

  private setProcessSelect2Data(values: Object[]): Select2OptionData[] {

    const data = [
      { id: '0', text: 'בחר תהליך' },
      { id: '-1', text: 'הכל' }
    ];

    for (let i = 0; i < values.length; i++) {
      data[i + 2] = { id: values[i]['id'], text: values[i]['text'] };
    }

    return data;
  }


}
