import { Component, OnInit, Input } from '@angular/core';
import { MatDialog } from '@angular/material';

import { TransmissionIntroFormComponent } from '../transmission-intro-form/transmission-intro-form.component';

import { UserSessionService } from '../../../shared/_services/user-session.service';
import { ProcessService } from '../../_services/http/process.service';

import { Process } from '../../../shared/_models/process.model';
import { EmployeePayment } from '../../../shared/_models/employee-payment.model';
import { TransmissionData } from '../../../shared/_models/transmission-data.model';

@Component({
  selector: 'app-process-transmission',
  templateUrl: './process-transmission.component.html',
  styleUrls: ['./process-transmission.component.css']
})
export class ProcessTransmissionComponent implements OnInit {

  @Input() process: Process;
  
  payments: EmployeePayment[] = [];
  pay = new EmployeePayment;

  public checkBoxValue: boolean = true;
  
  constructor(private dialog: MatDialog, private userSession: UserSessionService, private processService: ProcessService) {}

  ngOnInit() {
    if (this.process.stepStatus !== 1) {
      setTimeout(() => this.setDialog(), 0);      
    }
  }

  private setDialog(): void {
    const dialog = this.dialog.open(TransmissionIntroFormComponent, {
      disableClose: true
    });

    dialog.afterClosed().subscribe(data => this.launchTransmission(data));
  }

  private launchTransmission(data: TransmissionData): void {
    
    this.processService.launchTransmission(this.process.id, data, this.userSession.getToken()).then(response => {debugger;this.payments = response['data'];})
  }

}
