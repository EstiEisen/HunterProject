import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { MatDialog } from '@angular/material';

import { DataTableComponent } from '../../../shared/data-table/data-table.component';
import { FeedbackEmployeeTableDetailsComponent } from '../feedback-employee-table-details/feedback-employee-table-details.component';

import { UserSessionService } from '../../../shared/_services/user-session.service';
import { FeedbackService } from '../../_services/http/feedback.service';
import { GeneralHttpService } from '../../_services/http/general-http.service';

import { MONTHS } from '../../../shared/_const/months';
import { FileFeedback } from '../../../shared/_models/file-feedback.model';
import { Employer } from '../../../shared/_models/employer.model';
import { Manufacturer } from '../../../shared/_models/manufacturer.model';
import { Product } from '../../../shared/_models/product.model';
import { EmployeeFeedbackData } from '../../../shared/_const/employee-feedback-data';
import { Select2OptionData } from 'ng2-select2/ng2-select2.interface';
import {EmployeeFeedback} from "../../../shared/_models/employee-feedback.model";

@Component({
  selector: 'app-feedback-employee-table',
  templateUrl: './feedback-employee-table.component.html',
  styleUrls: ['../../../shared/data-table/data-table.component.css']
})
export class FeedbackEmployeeTableComponent extends DataTableComponent implements OnInit {

  manufacturers: Select2OptionData[] = [];
  employers: Select2OptionData[] = [];
  statuses: Select2OptionData[] = [];
  products: Select2OptionData[] = [];

  feedback = new FileFeedback;

  mode: 'standard' | 'rejected' = 'standard';

  readonly months = MONTHS;
  readonly currentYear = new Date().getFullYear();

  constructor(protected route: ActivatedRoute, private dialog: MatDialog, private userSession: UserSessionService,
              private generalService: GeneralHttpService, private feedbackService: FeedbackService) {
    super(route);
  }

  ngOnInit() {
    if (this.route.snapshot.url[0].path === 'rejected') {
      this.mode = 'rejected';
    }

    this.employers = this.route.snapshot.data['employers'];
    this.searchCriteria['employerID'] = +this.employers[0].id;
    this.searchCriteria['year'] = this.currentYear;
    this.searchCriteria['month'] = new Date().getMonth() + 1;

    this.route.queryParams.subscribe(params => this.setCriteria(params));
    super.ngOnInit();
  }

  private setCriteria(params: Object): void {
    for (const param in params) {
      if (params[param]) {
        if (param === 'months') {
          this.searchCriteria['months'] = JSON.parse(params['months']);
        } else {
          this.searchCriteria[param] = params[param];
        }
      }
    }
  }

  fetchItems(): void {
    this.feedbackService.getEmployeeFeedbacks(this.userSession.getToken(), this.searchCriteria).then(response => this.setItems(response));
  }
//EmployeeFeedbackData
  setItems(response: any): void {
    this.isSearching = false;
debugger;
    this.manufacturers = response.manufacturers;
    this.products = response.products;
    this.statuses = response.statuses;
    this.items = response.feedbacks;



		this.paginationData.totalItems = this.items.length;
		this.paginateItems();
  }

  setMonths(month: number): void {
    this.searchCriteria['month'] = month;
    this.search();
  }

  openDetailsDialog(feedback: FileFeedback): void {
    this.dialog.open(FeedbackEmployeeTableDetailsComponent, {
      width: '700px',
      data: {
        feedback: feedback
      }
    });
  }

  getStatusLabel(key:number, enumStr: 'status' | 'productType'): string{
    if (enumStr === 'status' ) {
      return EmployeeFeedback.statusLabel.get(key);
    }
    if (enumStr === 'productType') {
      return EmployeeFeedback.productTypeLabel.get(key);
    }
  }
  getMonthLable(date: string): string {
    const d: Date = new Date(date);
    return this.months[d.getMonth()];
  }
}
