import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { MatDialog } from '@angular/material';

import { DataTableComponent } from '../../shared/data-table/data-table.component';

import { UserSessionService } from '../../shared/_services/user-session.service';
import { ProcessService } from '../_services/http/process.service';
import { ProcessFileService } from '../_services/http/process-file.service';
import { EmployerService } from '../_services/http/employer.service';

import { DataTableHeader } from '../../shared/_models/data-table/data-table-header.model';
import { Employer } from '../../shared/_models/employer.model';
import { Process, ValidityStatus, StepStatus } from '../../shared/_models/process.model';

import { MONTHS } from '../../shared/_const/months';
import { ProcessStatusErrorMessageComponent } from './process-status-error-message/process-status-error-message.component';

import * as FileSaver from 'file-saver';

@Component({
  selector: 'app-process-table',
  templateUrl: './process-table.component.html',
})
export class ProcessTableComponent extends DataTableComponent implements OnInit {

  readonly months = MONTHS;
  readonly currentYear = new Date().getFullYear();

  employers: Employer[];
  process = new Process;

  validityStatus = ValidityStatus;
  stepStatus = StepStatus;
  
  readonly headers: DataTableHeader[] = [
    { column: 'addToProcessName', label: 'שם תהליך' }, { column: 'id', label: 'מספר תהליך' }, { column: 'month', label: 'חודש' },
    { column: 'year', label: 'שנה' }, { column: 'codeFile', label: 'קוד' }, { column: 'totalPaymentFile', label: 'סכום' },
    { column: 'statusTransmit', label: 'סטטוס שידור' },
  ];

  searchCriteria: { employerID: number, year: number, month: number };

  constructor(protected route: ActivatedRoute, private userSession: UserSessionService, private processService: ProcessService,
    private processFileService: ProcessFileService, private employerService: EmployerService, private router: Router, private dialog: MatDialog) {
    super(route);
  }

  ngOnInit() {
    this.employerService.getEmployers(this.userSession.getToken()).then(response => this.init(response));
  }

  private init(response: Employer[]): void {
    this.employers = response;
    this.searchCriteria.employerID = this.employers[0].id;
    this.searchCriteria.year = this.currentYear;
    this.fetchItems();
  }

  fetchItems(): void {
    this.processService.getProcesses(this.userSession.getToken(), this.searchCriteria, this.orderCriteria).then(response => this.setItems(response));
  }

  downloadFile(processID: number): void {
    this.processFileService.downloadProcessFile(processID, this.userSession.getToken()).then(response => FileSaver.saveAs(response, 'export.dat'));
  }

  openProcessStatusErrorMessageComponent(): void {
    this.dialog.open(ProcessStatusErrorMessageComponent, {
      height: '20%',
      width: '40%'
    });
  }

  handleProcessClick(StepStatus: number, processID: number): void {
    debugger;
    switch (StepStatus) {
      case -1:
      this.openProcessStatusErrorMessageComponent();
      break;
      case 1:
      this.router.navigate(['/process/new/' + processID]);  
      break;    
      case 2:
      this.router.navigate(['/process/new/' + processID]);  
      break; 
      default:
      this.router.navigate(['/feedback/table/files']);      
    }
  }

}   